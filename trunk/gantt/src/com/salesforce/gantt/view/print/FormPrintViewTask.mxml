<?xml version="1.0"?>
<!-- Custom control to print the DataGrid control on multiple pages. -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:print="com.salesforce.gantt.view.print.*" backgroundColor="#FFFFFF"
	paddingLeft="10" paddingRight="10"
    paddingTop="40" paddingBottom="40" horizontalAlign="center" horizontalScrollPolicy="off" >

    <mx:Script>
        <![CDATA[
        	import com.salesforce.gantt.model.Task;
        	import mx.printing.FlexPrintJob;
        	import mx.collections.ArrayCollection;
        	import mx.controls.AdvancedDataGrid;
        	import com.salesforce.gantt.controller.Components;
       	 	import com.salesforce.gantt.controller.Constants;
            import mx.core.*
            // Declare and initialize the variables used in the component.
            // The application sets the actual prodTotal value.
            [Bindable]
            private var pageNumber:Number = 0;
            [Bindable]
            private var pagesTotal:Number = 0;
	
			[Bindable]
			public var source : AdvancedDataGrid;
	
		    /*
			* Prints the grid
			*/
		    // The function to print the output.
		    public function doPrint():void 
		    {
		    	var scaleRowHeightPrint : int = 30;
		        var printJob : FlexPrintJob = new FlexPrintJob();
		        if (printJob.start()) {
		            // Create a FormPrintView control as a child of the current view.
		            Application.application.addChild(this);
		            //Set the print view properties.
		            width=printJob.pageWidth;
		            height=printJob.pageHeight;
	
		            //set header
		            header.headerText = Components.instance.project.name;
		            
		            //sets rowHeight
		            myDataGrid.rowHeight = scaleRowHeightPrint * heightRowDataGrodPrint();
		            
					// Set the data provider of the FormPrintView component's data grid
		            // to be the data provider of the displayed data grid.
		            //thePrintView.myDataGrid.dataProvider = taskListAdvancedDataGrid.dataProvider;
		           	myDataGrid.source = source;
		            // Create a single-page image.
		            showPage("single");
		            // If the print image's data grid can hold all the provider's rows, 
		            // add the page to the print job. 
		            if(!myDataGrid.validNextPage)
		            {
		                printJob.addObject(this);
		            }
		            // Otherwise, the job requires multiple pages.
		            else
		            {
		                // Create the first page and add it to the print job.
		                showPage("first");
		                printJob.addObject(this);
		                pageNumber++;
		                // Loop through the following code until all pages are queued.
		                while(true)
		                {
		                    // Move the next page of data to the top of the print grid.
		                    myDataGrid.nextPage();
		                    showPage("last");    
		                    // If the page holds the remaining data, or if the last page 
		                    // was completely filled by the last grid data, queue it for printing.
		                    // Test if there is data for another PrintAdvancedDataGrid page.
		                    if(!myDataGrid.validNextPage) 
		                    {
		                        // This is the last page; queue it and exit the print loop.
		                        printJob.addObject(this);
		                        pagesTotal = pageNumber;
		                        break;
		                    }
		                    else
		                    // This is not the last page. Queue a middle page. 
		                    {
		                        showPage("middle");
		                        printJob.addObject(this);
		                        pageNumber++;
		                    }
		                }
		            }
		            // All pages are queued; remove the FormPrintView control to free memory.
		            Application.application.removeChild(this);
		        }
		        // Send the job to the printer.
		        printJob.send();
	    	}
            // Control the page contents by selectively hiding the header and
            // footer based on the page type.
            public function showPage(pageType:String):void {
                if(pageType == "first" || pageType == "middle") {
                    // Hide the footer.
                    footer.includeInLayout=false;
                    footer.visible = false;
                }
                if(pageType == "middle" || pageType == "last") {
                    // The header won't be used again; hide it.
                    header.includeInLayout=false;
                    header.visible = false;
                }
                if(pageType == "last") {
                    // Show the footer.
                    footer.includeInLayout=true;
                    footer.visible = true;
                }
                //Update the DataGrid layout to reflect the results.
                validateNow();
            }        
            
             /*
			* Calculates the height that must have the Grid to
			* fit all tasks dependencies and resources.
			*/
		    private function heightRowDataGrodPrint() : int
		    {
		    	var amountOfLineByLine : int = 1;
		    	var visibleTasksList : ArrayCollection = Components.instance.tasks.filterVisibleTask();
		    	for(var i : int = 0; i < visibleTasksList.length; i++)
		    	{
		    		var task : Task = Task(visibleTasksList.getItemAt(i));
		    		if(task.taskResources.length > amountOfLineByLine)
		    		{
		    			amountOfLineByLine = task.taskResources.length;
		    		}
		    		if((task.dependencies.length / 3) > amountOfLineByLine)
		    		{
		    			amountOfLineByLine = task.dependencies.length / 3;
		    			if((task.dependencies.length % 3) != 0 )
		    			{
		    				amountOfLineByLine++;
		    			}
		    		}
		    	}
		    	return amountOfLineByLine;
		    }
        ]]>
    </mx:Script>

	<print:FormPrintHeader id="header" />

    <!-- The template for the printed page, with the contents for all pages
    <mx:VBox width="100%" paddingLeft="25">
        <mx:Label text="Page {pageNumber}" />
    </mx:VBox>
    . -->
    
    <!-- The data grid. The sizeToPage property is true by default, so the last
        page has only as many grid rows as are needed for the data. -->
    <mx:PrintAdvancedDataGrid  id="myDataGrid" width="75%" height="100%"
    		displayIcons="true"
    		displayItemsExpanded="true" 
    		sizeToPage="true"/>

    <!-- Create a FormPrintFooter control and set its prodTotal variable. -->
    <print:FormPrintFooter id="footer" pageNumber="{pageNumber}" pagesTotal="{pagesTotal}" />

</mx:VBox>