@isTest private class ProjectTaskDurationTest {
    static testMethod void myUnitTest(){
    	/*
		GenerateEnvironmentTest.gen(); 
		ProjectUtil.setIsTest( true );
    	Test.startTest();

		ProjectTaskDuration d = new ProjectTaskDuration();

		d.doCalculateEndDate( GenerateEnvironmentTest.task );
		
		d.doCalculateDuration( GenerateEnvironmentTest.task );
		
		d.doCalculateEndDateInDays( GenerateEnvironmentTest.task, 5 );

		d.doCalculateEndDateInHours( GenerateEnvironmentTest.task, GenerateEnvironmentTest.project);
		
		d.getWorkDays( 5);
		
		d.doExcludeNonWorkingDays( Date.today(), 5, 20 );
		
		d.doExcludeNonWorkingDays( Date.today(), Date.today(), 5 );
		
		d.verifyStartDate( GenerateEnvironmentTest.task, GenerateEnvironmentTest.project);
		
		d.verifyEndDate( GenerateEnvironmentTest.task, GenerateEnvironmentTest.project);

		d.parseDuration( GenerateEnvironmentTest.task ); 
		
		
		
		d.insertRawDuration( GenerateEnvironmentTest.task, 'days', '5', 8, 'none');
		d.insertRawDuration( GenerateEnvironmentTest.task, 'days', '5', 8, 'none');
		d.insertRawDuration( GenerateEnvironmentTest.task, 'days', '5', 8, 'days');
		d.insertRawDuration( GenerateEnvironmentTest.task, 'hours', '5', 8, 'days');
		d.insertRawDuration( GenerateEnvironmentTest.task, 'hours', '5', 8, 'hours');
		d.insertRawDuration( GenerateEnvironmentTest.task, 'hours', '5', 8, 'hours');
 
		d.replaceHours('h');
		d.replaceHours('H');

		d.replaceDays('h');
		d.replaceDays('H');

		d.calculateDurationDays( '20', 8 );

		d.calculateDurationHours( '20', 8 );



    	Test.stopTest();
		ProjectUtil.setIsTest( false );*/
    }     	
}